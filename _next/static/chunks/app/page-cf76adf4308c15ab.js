(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{1551:(e,t,i)=>{Promise.resolve().then(i.bind(i,4356))},4356:(e,t,i)=>{"use strict";i.d(t,{default:()=>m});var r=i(5155),s=i(2115),a=i(3096);let n=[{id:"1",title:"Bubble Sort",description:"A simple sorting algorithm that repeatedly steps through the list. Time: O(n^2) avg/worst, O(n) best (already sorted). Space: O(1).",href:"/sort/bubble",section:"sort",preview:"/previews/bubble-sort.svg"},{id:"2",title:"Insertion Sort",description:"Builds the final sorted array one item at a time. Time: O(n^2) avg/worst, O(n) best (nearly sorted). Space: O(1).",href:"/sort/insertion",section:"sort",preview:"/previews/insertion-sort.svg"},{id:"3",title:"Selection Sort",description:"Repeatedly finds the minimum element and puts it at the beginning. Time: O(n^2). Space: O(1).",href:"/sort/selection",section:"sort",preview:"/previews/selection-sort.svg"},{id:"4",title:"Merge Sort",description:"A divide-and-conquer sorting algorithm. Time: O(n log n) (all cases). Space: O(n).",href:"/sort/merge",section:"sort",preview:"/previews/merge-sort.svg"},{id:"5",title:"Quick Sort",description:"An efficient divide-and-conquer sort. Time: O(n log n) avg/best, O(n^2) worst (bad pivots). Space: O(log n) recursion avg.",href:"/sort/quick",section:"sort",preview:"/previews/quick-sort.svg"},{id:"6",title:"Heap Sort",description:"A comparison sort using a binary heap. Time: O(n log n). Space: O(1) extra (in-place).",href:"/sort/heap",section:"sort",preview:"/previews/heap-sort.svg"},{id:"7",title:"Linear Search",description:"Sequentially checks each element until a match is found. Time: O(n). Space: O(1).",href:"/search/linear",section:"search",preview:"/previews/linear-search.svg"},{id:"8",title:"Binary Search",description:"Finds the position of a target within a sorted array. Time: O(log n). Space: O(1) iterative (O(log n) recursive).",href:"/search/binary",section:"search",preview:"/previews/binary-search.svg"},{id:"9",title:"A* Search",description:"Pathfinding with heuristics (admissible/consistent). Time: O(b^d) worst-case; practical depends on heuristic. Space: O(b^d).",href:"/search/a-star",section:"search",preview:"/previews/a-star-search.svg"},{id:"10",title:"Dijkstra's Algorithm",description:"Shortest paths in graphs with non-negative weights. Time: O((V+E) log V) with a binary heap. Space: O(V+E).",href:"/search/dijkstra",section:"search",preview:"/previews/dijkstra-search.svg"}];var o=i(6874),c=i.n(o),l=i(6766),d=i(9434);function h(e){let{className:t,...i}=e;return(0,r.jsx)("div",{"data-slot":"card",className:(0,d.cn)("bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm",t),...i})}function p(e){let{className:t,...i}=e;return(0,r.jsx)("div",{"data-slot":"card-header",className:(0,d.cn)("@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6",t),...i})}function g(e){let{className:t,...i}=e;return(0,r.jsx)("div",{"data-slot":"card-title",className:(0,d.cn)("leading-none font-semibold",t),...i})}function u(e){let{className:t,...i}=e;return(0,r.jsx)("div",{"data-slot":"card-content",className:(0,d.cn)("px-6",t),...i})}function v(e){let{visualizer:t}=e;return(0,r.jsx)(c(),{href:t.href,children:(0,r.jsxs)(h,{className:"hover:shadow-lg transition-shadow",children:[(0,r.jsxs)(p,{className:"space-y-3",children:[(0,r.jsx)(g,{children:t.title}),t.preview&&(0,r.jsx)("div",{className:"relative w-full h-32 rounded-md overflow-hidden bg-muted",children:(0,r.jsx)(l.default,{src:t.preview,alt:"".concat(t.title," preview"),fill:!0,className:"object-contain",unoptimized:!0})})]}),(0,r.jsx)(u,{children:(0,r.jsx)("p",{className:"text-muted-foreground",children:t.description})})]})})}function m(e){let{initialVisualizers:t,section:i}=e,o=(0,s.useMemo)(()=>i?n.filter(e=>e.section===i):n,[i]),[c,l]=(0,s.useState)(t),[d,h]=(0,s.useState)(2),[p,g]=(0,s.useState)(t.length<o.length),{ref:u,inView:m}=(0,a.Wx)(),f=(0,s.useCallback)(async()=>{let e=(d-1)*8,t=e+8,i=o.slice(e,t);l(e=>[...e,...i]),g(t<o.length),h(e=>e+1)},[d,o]);return(0,s.useEffect)(()=>{m&&p&&f()},[m,p,f]),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4",children:c.map(e=>(0,r.jsx)(v,{visualizer:e},e.id))}),p&&(0,r.jsx)("div",{ref:u,className:"text-center p-4",children:"Loading more..."})]})}},9434:(e,t,i)=>{"use strict";i.d(t,{cn:()=>a});var r=i(2596),s=i(9688);function a(){for(var e=arguments.length,t=Array(e),i=0;i<e;i++)t[i]=arguments[i];return(0,s.QP)((0,r.$)(t))}}},e=>{e.O(0,[277,874,599,441,964,358],()=>e(e.s=1551)),_N_E=e.O()}]);